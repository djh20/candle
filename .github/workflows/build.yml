name: Build

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      firmware_version:
        required: false
        type: string

env:
  FIRMWARE_VERSION: ${{ inputs.firmware_version || github.run_id }}
  PYTHON_VERSION: '3.13'
  PIO_VERSION: '6.1.18'

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.envs.outputs.environments }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio==${{ env.PIO_VERSION }}

      - name: Get Default Environments
        id: envs
        run: |
          echo "environments=$(pio project config --json-output | jq -cr '.[0][1][0][1]')" >> $GITHUB_OUTPUT

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        environment: ${{ fromJSON(needs.prepare.outputs.environments) }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}_${{ matrix.environment }}_${{ hashFiles('platformio.ini') }}
          restore-keys: ${{ runner.os }}_${{ matrix.environment }}_
          
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio==${{ env.PIO_VERSION }}

      - name: Build Firmware
        run: pio run -e ${{ matrix.environment }}

      - name: Generate Firmware Name
        run: echo "FIRMWARE_NAME=candle_${{ env.FIRMWARE_VERSION }}_${{ matrix.environment }}" >> $GITHUB_ENV

      - name: Move Firmware to Distribution Directory
        run: |
          mkdir ./dist
          mv ./.pio/build/${{ matrix.environment }}/firmware.bin ./dist/${{ env.FIRMWARE_NAME }}.bin
        
      - name: Generate Firmware Checksum
        working-directory: ./dist
        run: md5sum -b ${{ env.FIRMWARE_NAME }}.bin | awk '{ printf $1 }' >> ${{ env.FIRMWARE_NAME }}.md5
      
      - uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.environment }}
          path: ./dist/*